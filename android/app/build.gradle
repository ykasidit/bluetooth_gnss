plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('../../key.properties')
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    namespace = "com.clearevo.bluetooth_gnss"
    compileSdk = 36
    ndkVersion = "27.0.12077973"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    defaultConfig {
        // Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.clearevo.bluetooth_gnss"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdk 26
        targetSdk 36
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName

        ndk {
            abiFilters "arm64-v8a"
        }
    }

    dependenciesInfo {
        // Disables dependency metadata when building APKs.
        includeInApk = false
        // Disables dependency metadata when building Android App Bundles.
        includeInBundle = false
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false  //required otherwise built release apk would crash on app entry
            shrinkResources false //required for minifyEnabled false above
            }
        debug {
            signingConfig signingConfigs.release
            minifyEnabled false  //required otherwise built release apk would crash on app entry
            shrinkResources false //required for minifyEnabled false above
            }
    }

    lint {
        abortOnError true
        ignoreWarnings false
        quiet false
        warningsAsErrors true
    }




}

flutter {
    source = "../.."
}

dependencies {
    implementation "androidx.documentfile:documentfile:1.0.1"
    implementation 'com.google.code.gson:gson:2.11.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation group: 'net.sf.marineapi', name: 'marineapi', version: '0.11.0'
    implementation 'org.microg.gms:play-services-location:0.3.6.244735'
}
